{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "3b8e84e06efde753de2b2534cf3ad1c3db6d4e20921898e7d5c35e2ee5eeff06",
          "withoutMetadata": "55de4bcb23993e51250dd2caee1bb8d51862d47a34a3edd32bd12e6379b46b08",
          "linkedWithoutMetadata": "55de4bcb23993e51250dd2caee1bb8d51862d47a34a3edd32bd12e6379b46b08"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "setSpinResult(address,string,string,string,uint256)",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)268_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)268_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)268_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "7bb7383d75e8054860663f0afcd38ab54abe4a9700421fcd6edfadf24241239f",
          "withoutMetadata": "a4a73935ca563a35951863c4afa6c0f4835ca860522d767feeac1dab14760546",
          "linkedWithoutMetadata": "a4a73935ca563a35951863c4afa6c0f4835ca860522d767feeac1dab14760546"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "setSpinResult(address,string,string,string,uint256)",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "spinCooldown",
            "src": "scripts/contracts/SlotMachine.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSlots",
            "src": "scripts/contracts/SlotMachine.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "spinCooldown",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "maxSlots",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:11"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:12"
            },
            {
              "label": "lastSpinTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:13"
            },
            {
              "label": "slotCount",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:14"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(Slot)282_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)282_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)282_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "3b8e84e06efde753de2b2534cf3ad1c3db6d4e20921898e7d5c35e2ee5eeff06",
          "withoutMetadata": "55de4bcb23993e51250dd2caee1bb8d51862d47a34a3edd32bd12e6379b46b08",
          "linkedWithoutMetadata": "55de4bcb23993e51250dd2caee1bb8d51862d47a34a3edd32bd12e6379b46b08"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "setSpinResult(address,string,string,string,uint256)",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)268_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)268_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)268_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "f791c42af148e0807fc1814fd7ddb32c55436f591bbe03003dfa4a16d2720bbb",
          "withoutMetadata": "a173b14d4547cc5392fb2ee7086706076ae315c0925e6994a06aadc8d06f3e34",
          "linkedWithoutMetadata": "a173b14d4547cc5392fb2ee7086706076ae315c0925e6994a06aadc8d06f3e34"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "setSpinResult(address,string,string,string,uint256)",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)268_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)268_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)268_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "3b8e84e06efde753de2b2534cf3ad1c3db6d4e20921898e7d5c35e2ee5eeff06",
          "withoutMetadata": "55de4bcb23993e51250dd2caee1bb8d51862d47a34a3edd32bd12e6379b46b08",
          "linkedWithoutMetadata": "55de4bcb23993e51250dd2caee1bb8d51862d47a34a3edd32bd12e6379b46b08"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "setSpinResult(address,string,string,string,uint256)",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)268_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)268_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)268_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "74be27d9a622c35a0497be335a863ff9b2e9a2bd6b9346fa5b8b2a69b43b88d6",
          "withoutMetadata": "1d80cb9b8ceeae086174f60b5391cd51ce0d304302265092c3475d83bc82713c",
          "linkedWithoutMetadata": "1d80cb9b8ceeae086174f60b5391cd51ce0d304302265092c3475d83bc82713c"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "setSpinResult(address,string,string,string,uint256)",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)268_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)268_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)268_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "246450f583aec9144f820fa5689bf1607af8caffadd781d4fc4a54868718221f",
          "withoutMetadata": "fe621073c96ae4d39b6889b435cda749d92a7de3c101b1adb29757347fa63c6b",
          "linkedWithoutMetadata": "fe621073c96ae4d39b6889b435cda749d92a7de3c101b1adb29757347fa63c6b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "setSpinResult(address,string,string,string,uint256)",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)268_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)268_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)268_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "b2c92aefba231662f4b303244879af36ec7c184b7b816c05ebdcea2c4b0f3137",
          "withoutMetadata": "df26016ce14e890ed98d6450462701bebad17a9faf3c753b978cd31a5ea153e0",
          "linkedWithoutMetadata": "df26016ce14e890ed98d6450462701bebad17a9faf3c753b978cd31a5ea153e0"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "setSpinResult(address,string,string,string,uint256)",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)268_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)268_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)268_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "3b8e84e06efde753de2b2534cf3ad1c3db6d4e20921898e7d5c35e2ee5eeff06",
          "withoutMetadata": "55de4bcb23993e51250dd2caee1bb8d51862d47a34a3edd32bd12e6379b46b08",
          "linkedWithoutMetadata": "55de4bcb23993e51250dd2caee1bb8d51862d47a34a3edd32bd12e6379b46b08"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "setSpinResult(address,string,string,string,uint256)",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)268_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)268_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)268_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "346e8b671a2af457e1d4c61d15ce579672757f665c1a9a299a3001dee5c0c75a",
          "withoutMetadata": "4a2c18a91a5afb8e8afbeac4e3070c98ec62237b8c0e3be19837d498d56bf918",
          "linkedWithoutMetadata": "4a2c18a91a5afb8e8afbeac4e3070c98ec62237b8c0e3be19837d498d56bf918"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "setSpinResult(address,string,string,string,uint256)",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Slot)200_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)200_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)200_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "eb5dc5c19520e1e36eee6674a648d62df5f866b94166a31cd34664edf304c574",
          "withoutMetadata": "4a2c18a91a5afb8e8afbeac4e3070c98ec62237b8c0e3be19837d498d56bf918",
          "linkedWithoutMetadata": "4a2c18a91a5afb8e8afbeac4e3070c98ec62237b8c0e3be19837d498d56bf918"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "setSpinResult(address,string,string,string,uint256)",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Slot)200_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)200_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)200_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "f046709f486f5fd88daebf61ea168838f49b70406c65f3b40b48b6a87cc67038",
          "withoutMetadata": "5c164cf93a46dfb25d12152e7a6b7aaf8068b1f172a0d301045616d719ae9415",
          "linkedWithoutMetadata": "5c164cf93a46dfb25d12152e7a6b7aaf8068b1f172a0d301045616d719ae9415"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "setSpinResult(address,string[3],uint256)",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Slot)200_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)200_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)200_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "b90fd9e14a29168d9d890a9972d342c91332c3294ba91c2a861bad02f5c1913f",
          "withoutMetadata": "57c6c0e803a207907c2a30048cd3447ae577216280850dc5983d57661f18b29e",
          "linkedWithoutMetadata": "57c6c0e803a207907c2a30048cd3447ae577216280850dc5983d57661f18b29e"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "setSpinResult(address,string[3],uint256)",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Slot)200_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)200_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)200_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/Oracle.sol:Oracle": {
        "src": "scripts/contracts/Oracle.sol:4",
        "version": {
          "withMetadata": "7cb04481915ec761970bbc031d12b6ddc99d105a0ca29ec7e0815cbbe178e52f",
          "withoutMetadata": "5172a12ad427894de9e2b0f7268fc4e9126b19bafe15a8321c6b1b2bdb54309c",
          "linkedWithoutMetadata": "5172a12ad427894de9e2b0f7268fc4e9126b19bafe15a8321c6b1b2bdb54309c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "requestRandomNumber()",
          "setRandomNumber(uint256)",
          "updateOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Oracle",
            "src": "scripts/contracts/Oracle.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "randomNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:5"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "5db43c1f0bbfd0a0125a34d7ef835abd44ca3e76767aada3cc81a4e95c54fe19",
          "withoutMetadata": "e22848f149997abcd9c88b403399c9c5cd842e0230888c5c49d1d5a5993b4d45",
          "linkedWithoutMetadata": "e22848f149997abcd9c88b403399c9c5cd842e0230888c5c49d1d5a5993b4d45"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "radomFeed",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(Oracle)236",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)357_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(Oracle)236": {
              "label": "contract Oracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Slot)357_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)357_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/Oracle.sol:Oracle": {
        "src": "scripts/contracts/Oracle.sol:4",
        "version": {
          "withMetadata": "7cb04481915ec761970bbc031d12b6ddc99d105a0ca29ec7e0815cbbe178e52f",
          "withoutMetadata": "5172a12ad427894de9e2b0f7268fc4e9126b19bafe15a8321c6b1b2bdb54309c",
          "linkedWithoutMetadata": "5172a12ad427894de9e2b0f7268fc4e9126b19bafe15a8321c6b1b2bdb54309c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "requestRandomNumber()",
          "setRandomNumber(uint256)",
          "updateOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Oracle",
            "src": "scripts/contracts/Oracle.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "randomNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:5"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "7c530032e87c7c91945417602fd82cf003622482e5c82a2688f572266668314f",
          "withoutMetadata": "93bac92933d9d0238c3ec5f6b4c74d97cbad4534ad9667f6e1948fbb27a96376",
          "linkedWithoutMetadata": "93bac92933d9d0238c3ec5f6b4c74d97cbad4534ad9667f6e1948fbb27a96376"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "radomFeed",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(Oracle)236",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)357_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(Oracle)236": {
              "label": "contract Oracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Slot)357_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)357_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/Oracle.sol:Oracle": {
        "src": "scripts/contracts/Oracle.sol:8",
        "version": {
          "withMetadata": "ba87507ac386a266f78d360c223bd31f47c00570ede6c49c698d11ea2276657c",
          "withoutMetadata": "5172a12ad427894de9e2b0f7268fc4e9126b19bafe15a8321c6b1b2bdb54309c",
          "linkedWithoutMetadata": "5172a12ad427894de9e2b0f7268fc4e9126b19bafe15a8321c6b1b2bdb54309c"
        },
        "inherit": [
          "scripts/contracts/Oracle.sol:OracleInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "requestRandomNumber()",
          "setRandomNumber(uint256)",
          "updateOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Oracle",
            "src": "scripts/contracts/Oracle.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "randomNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:9"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/Oracle.sol:OracleInterface": {
        "src": "scripts/contracts/Oracle.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "requestRandomNumber()",
          "setRandomNumber(uint256)",
          "randomNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "e672b458626ead67da498d122672dd5459b1b081fa2a263be87573be814bafb0",
          "withoutMetadata": "f85450e7e08c15544a5e0e016b472ebd6a1a7e00e78d6ad7aa2b9669e4cfac0a",
          "linkedWithoutMetadata": "f85450e7e08c15544a5e0e016b472ebd6a1a7e00e78d6ad7aa2b9669e4cfac0a"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "radomFeed",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(OracleInterface)158",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)373_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(OracleInterface)158": {
              "label": "contract OracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Slot)373_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)373_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/Oracle.sol:Oracle": {
        "src": "scripts/contracts/Oracle.sol:8",
        "version": {
          "withMetadata": "ba87507ac386a266f78d360c223bd31f47c00570ede6c49c698d11ea2276657c",
          "withoutMetadata": "5172a12ad427894de9e2b0f7268fc4e9126b19bafe15a8321c6b1b2bdb54309c",
          "linkedWithoutMetadata": "5172a12ad427894de9e2b0f7268fc4e9126b19bafe15a8321c6b1b2bdb54309c"
        },
        "inherit": [
          "scripts/contracts/Oracle.sol:OracleInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "requestRandomNumber()",
          "setRandomNumber(uint256)",
          "updateOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Oracle",
            "src": "scripts/contracts/Oracle.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "randomNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:9"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/Oracle.sol:OracleInterface": {
        "src": "scripts/contracts/Oracle.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "requestRandomNumber()",
          "setRandomNumber(uint256)",
          "randomNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "7f640ba13fb242f16cc6619f66dd3cba7d4543050045ee557e17c39e028fef64",
          "withoutMetadata": "dcaab562c67863a8555b5cd6fc34e200cdd1e3d772d99bec231ede1f8c1e00b9",
          "linkedWithoutMetadata": "dcaab562c67863a8555b5cd6fc34e200cdd1e3d772d99bec231ede1f8c1e00b9"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "radomFeed",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(Oracle)252",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)373_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(Oracle)252": {
              "label": "contract Oracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Slot)373_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)373_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/Oracle.sol:Oracle": {
        "src": "scripts/contracts/Oracle.sol:8",
        "version": {
          "withMetadata": "ba87507ac386a266f78d360c223bd31f47c00570ede6c49c698d11ea2276657c",
          "withoutMetadata": "5172a12ad427894de9e2b0f7268fc4e9126b19bafe15a8321c6b1b2bdb54309c",
          "linkedWithoutMetadata": "5172a12ad427894de9e2b0f7268fc4e9126b19bafe15a8321c6b1b2bdb54309c"
        },
        "inherit": [
          "scripts/contracts/Oracle.sol:OracleInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "requestRandomNumber()",
          "setRandomNumber(uint256)",
          "updateOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Oracle",
            "src": "scripts/contracts/Oracle.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "randomNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:9"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/Oracle.sol:OracleInterface": {
        "src": "scripts/contracts/Oracle.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "requestRandomNumber()",
          "setRandomNumber(uint256)",
          "randomNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "c88308b10927cc11ef244abaa0b44a9bdb1933572adba9757e05cfc7f09a4070",
          "withoutMetadata": "1d9d523d47080c3dd18d9bb78c03250073defbda1be2441c25729e2639a68f16",
          "linkedWithoutMetadata": "1d9d523d47080c3dd18d9bb78c03250073defbda1be2441c25729e2639a68f16"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "radomFeed",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(OracleInterface)158",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)371_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(OracleInterface)158": {
              "label": "contract OracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Slot)371_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)371_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/Oracle.sol:Oracle": {
        "src": "scripts/contracts/Oracle.sol:8",
        "version": {
          "withMetadata": "ba87507ac386a266f78d360c223bd31f47c00570ede6c49c698d11ea2276657c",
          "withoutMetadata": "5172a12ad427894de9e2b0f7268fc4e9126b19bafe15a8321c6b1b2bdb54309c",
          "linkedWithoutMetadata": "5172a12ad427894de9e2b0f7268fc4e9126b19bafe15a8321c6b1b2bdb54309c"
        },
        "inherit": [
          "scripts/contracts/Oracle.sol:OracleInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "requestRandomNumber()",
          "setRandomNumber(uint256)",
          "updateOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Oracle",
            "src": "scripts/contracts/Oracle.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "randomNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:9"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/Oracle.sol:OracleInterface": {
        "src": "scripts/contracts/Oracle.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "requestRandomNumber()",
          "setRandomNumber(uint256)",
          "randomNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "473b3ce678ed701cd8c55e4d0421a742f2eb6f303bed6dee2eefa5baafffd590",
          "withoutMetadata": "1d9d523d47080c3dd18d9bb78c03250073defbda1be2441c25729e2639a68f16",
          "linkedWithoutMetadata": "1d9d523d47080c3dd18d9bb78c03250073defbda1be2441c25729e2639a68f16"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "radomFeed",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(Oracle)252",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)371_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(Oracle)252": {
              "label": "contract Oracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Slot)371_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)371_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/Oracle.sol:Oracle": {
        "src": "scripts/contracts/Oracle.sol:4",
        "version": {
          "withMetadata": "7cb04481915ec761970bbc031d12b6ddc99d105a0ca29ec7e0815cbbe178e52f",
          "withoutMetadata": "5172a12ad427894de9e2b0f7268fc4e9126b19bafe15a8321c6b1b2bdb54309c",
          "linkedWithoutMetadata": "5172a12ad427894de9e2b0f7268fc4e9126b19bafe15a8321c6b1b2bdb54309c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "requestRandomNumber()",
          "setRandomNumber(uint256)",
          "updateOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Oracle",
            "src": "scripts/contracts/Oracle.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "randomNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:5"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "4cebc03be10e133ee2282d2af487af338465b80cadd11b372bb5628c8a1965bc",
          "withoutMetadata": "1d9d523d47080c3dd18d9bb78c03250073defbda1be2441c25729e2639a68f16",
          "linkedWithoutMetadata": "1d9d523d47080c3dd18d9bb78c03250073defbda1be2441c25729e2639a68f16"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "radomFeed",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(Oracle)236",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)355_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(Oracle)236": {
              "label": "contract Oracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Slot)355_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)355_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/Oracle.sol:Oracle": {
        "src": "scripts/contracts/Oracle.sol:10",
        "version": {
          "withMetadata": "4fbd9e877c24de556f3bc2aae2a52bbbc6d85380b6156084f86ef38780c7ca19",
          "withoutMetadata": "10c7a38a074c62f02724f335708d6fda6c27191e37ad9b6f5794060e49a48d1f",
          "linkedWithoutMetadata": "10c7a38a074c62f02724f335708d6fda6c27191e37ad9b6f5794060e49a48d1f"
        },
        "inherit": [
          "scripts/contracts/Oracle.sol:OracleInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "requestRandomNumber()",
          "setRandomNumber(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Oracle",
            "src": "scripts/contracts/Oracle.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "randomNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:11"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Oracle",
              "src": "scripts/contracts/Oracle.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/Oracle.sol:OracleInterface": {
        "src": "scripts/contracts/Oracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "requestRandomNumber()",
          "setRandomNumber(uint256)",
          "randomNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "c4a2bb5e486472bbc8c3bb5169483cdf7e5cff444aeb653d0646ba9104582f1a",
          "withoutMetadata": "1d9d523d47080c3dd18d9bb78c03250073defbda1be2441c25729e2639a68f16",
          "linkedWithoutMetadata": "1d9d523d47080c3dd18d9bb78c03250073defbda1be2441c25729e2639a68f16"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "radomFeed",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(OracleInterface)158",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)339_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(OracleInterface)158": {
              "label": "contract OracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Slot)339_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)339_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/CustomOracleRandom.sol:CustomOracleRandom": {
        "src": "scripts/contracts/CustomOracleRandom.sol:10",
        "version": {
          "withMetadata": "3d0bc16c533ae84579b215661ba0d91662d6c7368269b826f36686762939c7a5",
          "withoutMetadata": "10c7a38a074c62f02724f335708d6fda6c27191e37ad9b6f5794060e49a48d1f",
          "linkedWithoutMetadata": "10c7a38a074c62f02724f335708d6fda6c27191e37ad9b6f5794060e49a48d1f"
        },
        "inherit": [
          "scripts/contracts/CustomOracleRandom.sol:ICustomOracleRandom"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "requestRandomNumber()",
          "setRandomNumber(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CustomOracleRandom",
            "src": "scripts/contracts/CustomOracleRandom.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "randomNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CustomOracleRandom",
              "src": "scripts/contracts/CustomOracleRandom.sol:11"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "CustomOracleRandom",
              "src": "scripts/contracts/CustomOracleRandom.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/CustomOracleRandom.sol:ICustomOracleRandom": {
        "src": "scripts/contracts/CustomOracleRandom.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "requestRandomNumber()",
          "setRandomNumber(uint256)",
          "randomNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "8acb9a944e196109562520a5e6f33aff3d841da6f8149d424c5041c75d8fcd8d",
          "withoutMetadata": "c9bdfaf9e30aa7e928a3c6251128399ead5070bcd0368ea6da43b83e8cc7532d",
          "linkedWithoutMetadata": "c9bdfaf9e30aa7e928a3c6251128399ead5070bcd0368ea6da43b83e8cc7532d"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "radomFeed",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICustomOracleRandom)158",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:11"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)340_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICustomOracleRandom)158": {
              "label": "contract ICustomOracleRandom",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Slot)340_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)340_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/CustomOracleRandom.sol:CustomOracleRandom": {
        "src": "scripts/contracts/CustomOracleRandom.sol:10",
        "version": {
          "withMetadata": "9bcfb70d766479a7f14ec39d998221852d7b25d3c837dc18d3f5c2f1c8a81ca6",
          "withoutMetadata": "d32dd8af5e50c231e78cda957d8c17246ad9463ecd0a9ca547b1accc1af6129e",
          "linkedWithoutMetadata": "d32dd8af5e50c231e78cda957d8c17246ad9463ecd0a9ca547b1accc1af6129e"
        },
        "inherit": [
          "scripts/contracts/CustomOracleRandom.sol:ICustomOracleRandom"
        ],
        "libraries": [],
        "methods": [
          "()",
          "requestRandomNumber()",
          "setRandomNumber(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "randomNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CustomOracleRandom",
              "src": "scripts/contracts/CustomOracleRandom.sol:11"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/CustomOracleRandom.sol:ICustomOracleRandom": {
        "src": "scripts/contracts/CustomOracleRandom.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "requestRandomNumber()",
          "setRandomNumber(uint256)",
          "randomNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "16dd5acff7c0fd7ad3576ade8663132925a2b4c202b2fc7600b55c9c36d1ea78",
          "withoutMetadata": "1d9d523d47080c3dd18d9bb78c03250073defbda1be2441c25729e2639a68f16",
          "linkedWithoutMetadata": "1d9d523d47080c3dd18d9bb78c03250073defbda1be2441c25729e2639a68f16"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "radomFeed",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICustomOracleRandom)158",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:11"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)317_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICustomOracleRandom)158": {
              "label": "contract ICustomOracleRandom",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Slot)317_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)317_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/CustomOracleRandom.sol:CustomOracleRandom": {
        "src": "scripts/contracts/CustomOracleRandom.sol:10",
        "version": {
          "withMetadata": "3d0bc16c533ae84579b215661ba0d91662d6c7368269b826f36686762939c7a5",
          "withoutMetadata": "10c7a38a074c62f02724f335708d6fda6c27191e37ad9b6f5794060e49a48d1f",
          "linkedWithoutMetadata": "10c7a38a074c62f02724f335708d6fda6c27191e37ad9b6f5794060e49a48d1f"
        },
        "inherit": [
          "scripts/contracts/CustomOracleRandom.sol:ICustomOracleRandom"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "requestRandomNumber()",
          "setRandomNumber(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CustomOracleRandom",
            "src": "scripts/contracts/CustomOracleRandom.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "randomNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CustomOracleRandom",
              "src": "scripts/contracts/CustomOracleRandom.sol:11"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "CustomOracleRandom",
              "src": "scripts/contracts/CustomOracleRandom.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/CustomOracleRandom.sol:ICustomOracleRandom": {
        "src": "scripts/contracts/CustomOracleRandom.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "requestRandomNumber()",
          "setRandomNumber(uint256)",
          "randomNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "9b9b678ea07bf1aa757064a4fae6be052c2b05d2416eab1a5aadd09d754bde06",
          "withoutMetadata": "1d9d523d47080c3dd18d9bb78c03250073defbda1be2441c25729e2639a68f16",
          "linkedWithoutMetadata": "1d9d523d47080c3dd18d9bb78c03250073defbda1be2441c25729e2639a68f16"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "radomFeed",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICustomOracleRandom)158",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:11"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:25"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)339_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICustomOracleRandom)158": {
              "label": "contract ICustomOracleRandom",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Slot)339_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)339_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "c6f737dd28cd1e2fd72adbb128a3a5463882d11e21c2b89cf71fce5f4fe0128b",
          "withoutMetadata": "c6f737dd28cd1e2fd72adbb128a3a5463882d11e21c2b89cf71fce5f4fe0128b",
          "linkedWithoutMetadata": "c6f737dd28cd1e2fd72adbb128a3a5463882d11e21c2b89cf71fce5f4fe0128b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "private_key",
            "src": "scripts/contracts/SlotMachine.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "private_key",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:24"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)252_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)252_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)252_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "6b46e9a173eef093837f55a105e1da4641175c9acc46a9f330e726a55874f321",
          "withoutMetadata": "6b46e9a173eef093837f55a105e1da4641175c9acc46a9f330e726a55874f321",
          "linkedWithoutMetadata": "6b46e9a173eef093837f55a105e1da4641175c9acc46a9f330e726a55874f321"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "private_key",
            "src": "scripts/contracts/SlotMachine.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "private_key",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:24"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)252_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)252_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)252_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:VRFConsumerBase": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:101",
        "inherit": [
          "@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol:VRFRequestIDBase"
        ],
        "libraries": [],
        "methods": [
          "rawFulfillRandomness(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBase",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:183"
          },
          {
            "kind": "state-variable-immutable",
            "name": "LINK",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:168"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:169"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nonces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "VRFConsumerBase",
              "src": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:174"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol:VRFRequestIDBase": {
        "src": "@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol:4",
        "version": {
          "withMetadata": "46863d49882e0b7ef2a77880215481c6bbf73f3190febad8b5908e3a8a9ffe12",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "0a9b52dcf5ce411ee553ad90c94e9d40ccd133bd46fc09fbb9aede6e6813d5f0",
          "withoutMetadata": "0a9b52dcf5ce411ee553ad90c94e9d40ccd133bd46fc09fbb9aede6e6813d5f0",
          "linkedWithoutMetadata": "0a9b52dcf5ce411ee553ad90c94e9d40ccd133bd46fc09fbb9aede6e6813d5f0"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:VRFConsumerBase",
          "@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol:VRFRequestIDBase",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes32)",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "private_key",
            "src": "scripts/contracts/SlotMachine.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "VRFConsumerBase",
              "src": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:174"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "private_key",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:11"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)451_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:12"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:13"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "7",
              "type": "t_bytes32",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:15"
            },
            {
              "label": "requestIdToAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:16"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Slot)451_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)451_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "6b46e9a173eef093837f55a105e1da4641175c9acc46a9f330e726a55874f321",
          "withoutMetadata": "6b46e9a173eef093837f55a105e1da4641175c9acc46a9f330e726a55874f321",
          "linkedWithoutMetadata": "6b46e9a173eef093837f55a105e1da4641175c9acc46a9f330e726a55874f321"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "private_key",
            "src": "scripts/contracts/SlotMachine.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "private_key",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:24"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)252_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)252_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)252_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "230841e74593f96ac29ec60625997b3e8a66489f9d001202f444d78c534e0696",
          "withoutMetadata": "230841e74593f96ac29ec60625997b3e8a66489f9d001202f444d78c534e0696",
          "linkedWithoutMetadata": "230841e74593f96ac29ec60625997b3e8a66489f9d001202f444d78c534e0696"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "private_key",
            "src": "scripts/contracts/SlotMachine.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "private_key",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:24"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)252_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)252_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)252_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "c6f737dd28cd1e2fd72adbb128a3a5463882d11e21c2b89cf71fce5f4fe0128b",
          "withoutMetadata": "c6f737dd28cd1e2fd72adbb128a3a5463882d11e21c2b89cf71fce5f4fe0128b",
          "linkedWithoutMetadata": "c6f737dd28cd1e2fd72adbb128a3a5463882d11e21c2b89cf71fce5f4fe0128b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "private_key",
            "src": "scripts/contracts/SlotMachine.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "private_key",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:24"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)252_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)252_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)252_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "9b058ec8ba3b72c3d2e818365b6372f1090b460a2bc2c6d24cb081c847c49917",
          "withoutMetadata": "9b058ec8ba3b72c3d2e818365b6372f1090b460a2bc2c6d24cb081c847c49917",
          "linkedWithoutMetadata": "9b058ec8ba3b72c3d2e818365b6372f1090b460a2bc2c6d24cb081c847c49917"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "private_key",
            "src": "scripts/contracts/SlotMachine.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "private_key",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:24"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)252_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)252_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)252_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "a9f751d8de56015c6614d97771dc715b6351b7047cb9fd92915fe41c97ed8019",
          "withoutMetadata": "fa9431fa17492a79c14f46a6d97f0423d6232ed70f0ef396deb7e5c7dbbe9e15",
          "linkedWithoutMetadata": "fa9431fa17492a79c14f46a6d97f0423d6232ed70f0ef396deb7e5c7dbbe9e15"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "getPrizes()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "private_key",
            "src": "scripts/contracts/SlotMachine.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "private_key",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:24"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)252_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)252_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)252_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "0f7f0bfa9d6cfb8e57a77046962207d2a16cd26876c8c790b63b32218714312c",
          "withoutMetadata": "77ce468c154effae9c6af00e1c609bf7d4130c10adb135afe60c268f45ae6f9b",
          "linkedWithoutMetadata": "77ce468c154effae9c6af00e1c609bf7d4130c10adb135afe60c268f45ae6f9b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "private_key",
            "src": "scripts/contracts/SlotMachine.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "private_key",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:24"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Slot)252_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)252_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)252_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "183143f5aa71d03c09dc12edfa5f35aff34b744a428568c0adf23ef564b04575",
          "withoutMetadata": "958a2fc3fff81c5ed2649234b32d85004c971128d177ab3f884f6813be4ddc3f",
          "linkedWithoutMetadata": "958a2fc3fff81c5ed2649234b32d85004c971128d177ab3f884f6813be4ddc3f"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)249_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)249_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)249_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "2c361ae95a53e3de2365c3e4cd99f0ae49b77fe3363ed2e6e3c4e14651926ae5",
          "withoutMetadata": "dfd541b35bd98313f4d3b37734df49f852ff3b4b492e756ce4cb88fea9d779de",
          "linkedWithoutMetadata": "dfd541b35bd98313f4d3b37734df49f852ff3b4b492e756ce4cb88fea9d779de"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)249_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)249_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)249_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "ea5190bbf5b38ace0e05ec5303f4a7c32832f321634f888e7463d93e8f274d1f",
          "withoutMetadata": "2a4a4bc568719b8d525da8cfbf51e791f53e33002467eb81cff6319db84ffbf2",
          "linkedWithoutMetadata": "2a4a4bc568719b8d525da8cfbf51e791f53e33002467eb81cff6319db84ffbf2"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)249_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)249_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)249_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "0a44cb7164a5069d18bca9f07c11b55e14bf3d06ea659109042a71fb3e63a1c5",
          "withoutMetadata": "aea896b4a657b0396b274fca8f2349382a61527832068bdbb6777cdec707054b",
          "linkedWithoutMetadata": "aea896b4a657b0396b274fca8f2349382a61527832068bdbb6777cdec707054b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)249_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)249_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)249_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "2d4c879a9bf5bfe5719ac07aa4927a601d3a9cc702e8ffd455679edc215caa5e",
          "withoutMetadata": "aea896b4a657b0396b274fca8f2349382a61527832068bdbb6777cdec707054b",
          "linkedWithoutMetadata": "aea896b4a657b0396b274fca8f2349382a61527832068bdbb6777cdec707054b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)249_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)249_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)249_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "0a44cb7164a5069d18bca9f07c11b55e14bf3d06ea659109042a71fb3e63a1c5",
          "withoutMetadata": "aea896b4a657b0396b274fca8f2349382a61527832068bdbb6777cdec707054b",
          "linkedWithoutMetadata": "aea896b4a657b0396b274fca8f2349382a61527832068bdbb6777cdec707054b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)249_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)249_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)249_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "7ef19fe5da60e44ba43fa84258a5ad9d1d1fa0cccc87df937e66e61803e605bc",
          "withoutMetadata": "bd0e6623a9cf2885c96bcee94d3f1a15429a339780b12309055044cb8fdbd79b",
          "linkedWithoutMetadata": "bd0e6623a9cf2885c96bcee94d3f1a15429a339780b12309055044cb8fdbd79b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)249_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)249_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)249_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "6a5963f613a88003e3183c792ca4017f15a1dc529f48be9cb34bf8602d61eb8c",
          "withoutMetadata": "9d6aa1a5d545b08cacbb6ffe0364dcf097d315d9c6706c2cd87337e6005d8640",
          "linkedWithoutMetadata": "9d6aa1a5d545b08cacbb6ffe0364dcf097d315d9c6706c2cd87337e6005d8640"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)249_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)249_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)249_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "d44565e1282fb2e9ff8fe07e53442002198e22ddfb9bbb8cdceb4236d78804aa",
          "withoutMetadata": "5b4967565bbade5ff6daf40fafd0e612e88ef1093a2d7586bc683104498f204e",
          "linkedWithoutMetadata": "5b4967565bbade5ff6daf40fafd0e612e88ef1093a2d7586bc683104498f204e"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)249_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)249_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)249_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "6a5963f613a88003e3183c792ca4017f15a1dc529f48be9cb34bf8602d61eb8c",
          "withoutMetadata": "9d6aa1a5d545b08cacbb6ffe0364dcf097d315d9c6706c2cd87337e6005d8640",
          "linkedWithoutMetadata": "9d6aa1a5d545b08cacbb6ffe0364dcf097d315d9c6706c2cd87337e6005d8640"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)249_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)249_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)249_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "4663bb3568a2629fce39906df662a34c0d9f423997ac9b902015af33db050f47",
          "withoutMetadata": "92990e22a40332a4f5ddef2692d190f260848f639074e2034ad58c4cbcf953cc",
          "linkedWithoutMetadata": "92990e22a40332a4f5ddef2692d190f260848f639074e2034ad58c4cbcf953cc"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)249_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)249_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)249_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "00b0dc1e2c6f7a8a6abef9c6690c6d40993df929f31001eea8777f91d41eb599",
          "withoutMetadata": "92990e22a40332a4f5ddef2692d190f260848f639074e2034ad58c4cbcf953cc",
          "linkedWithoutMetadata": "92990e22a40332a4f5ddef2692d190f260848f639074e2034ad58c4cbcf953cc"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)249_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)249_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)249_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "e5ebbf3efd60d58809d3988cb6d285f9d73fd99ecb67d6ff968224831b508dde",
          "withoutMetadata": "92990e22a40332a4f5ddef2692d190f260848f639074e2034ad58c4cbcf953cc",
          "linkedWithoutMetadata": "92990e22a40332a4f5ddef2692d190f260848f639074e2034ad58c4cbcf953cc"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)249_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:42"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)249_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)249_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "f87e56917d5ab8caafe239cbf1e102f85784795b7e2348ba94eb052929182ea7",
          "withoutMetadata": "7cf6444eca64c99e44de9b2e2cefff8f1a851ce8063abd69e47b04e38f6f8390",
          "linkedWithoutMetadata": "7cf6444eca64c99e44de9b2e2cefff8f1a851ce8063abd69e47b04e38f6f8390"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)248_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)248_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)248_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "1652743c6e35d4568c1fd515dc7d142b944a4f21952f70632dde29b3f6a866cc",
          "withoutMetadata": "7cf6444eca64c99e44de9b2e2cefff8f1a851ce8063abd69e47b04e38f6f8390",
          "linkedWithoutMetadata": "7cf6444eca64c99e44de9b2e2cefff8f1a851ce8063abd69e47b04e38f6f8390"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)248_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)248_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)248_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "a9e34473edb4ea5b4d28b76007bf296927f4035e6aec8e09e9b45475b9b86d74",
          "withoutMetadata": "7cf6444eca64c99e44de9b2e2cefff8f1a851ce8063abd69e47b04e38f6f8390",
          "linkedWithoutMetadata": "7cf6444eca64c99e44de9b2e2cefff8f1a851ce8063abd69e47b04e38f6f8390"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)248_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)248_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)248_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "9326f30cf9c01b2d83986e887c2b9a433ee61479f7372792a6444071dfe66942",
          "withoutMetadata": "7cf6444eca64c99e44de9b2e2cefff8f1a851ce8063abd69e47b04e38f6f8390",
          "linkedWithoutMetadata": "7cf6444eca64c99e44de9b2e2cefff8f1a851ce8063abd69e47b04e38f6f8390"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)248_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)248_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)248_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "5ee06c9f8423df5ffaa3de2bed95809239b962fd2f81966da8a1bfdeefaa8aa0",
          "withoutMetadata": "7cf6444eca64c99e44de9b2e2cefff8f1a851ce8063abd69e47b04e38f6f8390",
          "linkedWithoutMetadata": "7cf6444eca64c99e44de9b2e2cefff8f1a851ce8063abd69e47b04e38f6f8390"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)248_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)248_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)248_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "30dac3dc77a2211b0c43f756bcdf782be06a6c64c23057a016bb857148348cbf",
          "withoutMetadata": "7cf6444eca64c99e44de9b2e2cefff8f1a851ce8063abd69e47b04e38f6f8390",
          "linkedWithoutMetadata": "7cf6444eca64c99e44de9b2e2cefff8f1a851ce8063abd69e47b04e38f6f8390"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "lastSpin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)248_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)248_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)248_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "2ca68d4283994865b9dc6a204e6fa3d39f872f024629bab787909506016c478d",
          "withoutMetadata": "d0de0544343a800f1c4680de34885b1e41eace40fb946153dd30a437608bd888",
          "linkedWithoutMetadata": "d0de0544343a800f1c4680de34885b1e41eace40fb946153dd30a437608bd888"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)248_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)248_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)248_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "64d4f3a0ddc472226d61266cfc54fa10ea91071aa8e0d5f290cdfc9e2a248a15",
          "withoutMetadata": "6cb22e24bbe9d4a700adefc14555688b795f60f5b7483260dd759f505aa49ddf",
          "linkedWithoutMetadata": "6cb22e24bbe9d4a700adefc14555688b795f60f5b7483260dd759f505aa49ddf"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)248_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)248_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)248_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "34af9764bc41d6d226f9d8b0fe3a279a41e4ae344cd7f6f5606b4a6ff2e9b40e",
          "withoutMetadata": "9400fe289a6a6f3f41f0f87feaa18624c1bd3122b274fb65421efcbe81d08a98",
          "linkedWithoutMetadata": "9400fe289a6a6f3f41f0f87feaa18624c1bd3122b274fb65421efcbe81d08a98"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)248_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)248_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)248_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "8cb5471988a0d52a34e71f39efc7e4365b87e061c6e6cd0b85725a61b6c29daa",
          "withoutMetadata": "34257909db32b873d16483e05f4b2446ea63d7e9bcd5e979a46c4b9c6459e47f",
          "linkedWithoutMetadata": "34257909db32b873d16483e05f4b2446ea63d7e9bcd5e979a46c4b9c6459e47f"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)248_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)248_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)248_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "8ee7643814ab28d5e35db3d71f6b94f2c8a2849486d748fb14eb7a4a3607d649",
          "withoutMetadata": "b37704598766ab0d86ae9d7ed8a949b8e554229acacd0beba04f705e8e40ef26",
          "linkedWithoutMetadata": "b37704598766ab0d86ae9d7ed8a949b8e554229acacd0beba04f705e8e40ef26"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)248_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)248_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)248_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:VRFConsumerBase": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:101",
        "inherit": [
          "@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol:VRFRequestIDBase"
        ],
        "libraries": [],
        "methods": [
          "rawFulfillRandomness(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBase",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:183"
          },
          {
            "kind": "state-variable-immutable",
            "name": "LINK",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:168"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:169"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nonces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "VRFConsumerBase",
              "src": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:174"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol:VRFRequestIDBase": {
        "src": "@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol:4",
        "version": {
          "withMetadata": "46863d49882e0b7ef2a77880215481c6bbf73f3190febad8b5908e3a8a9ffe12",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:7",
        "version": {
          "withMetadata": "b4fbbcc3e359b852c24c80a18ed9545e65852fe7bc1827c7d0079cef6906fe7d",
          "withoutMetadata": "35bdc842abbc1afde8de93288c4a7aebebb3165ac7a36ccfecb4909c4106727c",
          "linkedWithoutMetadata": "35bdc842abbc1afde8de93288c4a7aebebb3165ac7a36ccfecb4909c4106727c"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:VRFConsumerBase",
          "@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol:VRFRequestIDBase",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes32,uint256)",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "VRFConsumerBase",
              "src": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol:174"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:10"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:12"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:13"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:31"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Slot)541_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:48"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Slot)541_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)541_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "4b8925c0e2750bbd9573790402b4f6dfff0340f17a01a19bfb6b30a1a0dd43d3",
          "withoutMetadata": "24c5da32b296b938f8aa7cd38fa7c92673b55a08d829a4dc5feb21fd7b0dbf17",
          "linkedWithoutMetadata": "24c5da32b296b938f8aa7cd38fa7c92673b55a08d829a4dc5feb21fd7b0dbf17"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:9"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)248_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)248_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)248_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "9dc1c74a3619b16bfa0763cc259d3741ddc571e886fc6a86d167c9962323d928",
          "withoutMetadata": "c785d316c7898d927f73ad61fef98684fbf165fcf2160730ccf6ea018a3e65c6",
          "linkedWithoutMetadata": "c785d316c7898d927f73ad61fef98684fbf165fcf2160730ccf6ea018a3e65c6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:26"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:51"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)318_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:59"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)318_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)318_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "9f903d48fd229c3e44c84ac8162f840616629b37ce3f3cf32dbb24b33d60e3de",
          "withoutMetadata": "e881e7d28a6f12f135f16b8a494c3ccc66399433a2c5c0ec3608a0b03f6bdc50",
          "linkedWithoutMetadata": "e881e7d28a6f12f135f16b8a494c3ccc66399433a2c5c0ec3608a0b03f6bdc50"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:26"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:51"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)318_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:59"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)318_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)318_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "22385e01e6092794fda19f3d5a0265b489aaa8d201732793df091b7fcf37525b",
          "withoutMetadata": "c292b6c25f39bdae8661ffe709a6f7d69a716b4c36e313236f0fe2fc9e18c2b7",
          "linkedWithoutMetadata": "c292b6c25f39bdae8661ffe709a6f7d69a716b4c36e313236f0fe2fc9e18c2b7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:26"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:51"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)318_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:59"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)318_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)318_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "1c2e879cdf983d6087cf7c8e6f45bf5aa384e4a8e5efea56128b929c43dba67f",
          "withoutMetadata": "c292b6c25f39bdae8661ffe709a6f7d69a716b4c36e313236f0fe2fc9e18c2b7",
          "linkedWithoutMetadata": "c292b6c25f39bdae8661ffe709a6f7d69a716b4c36e313236f0fe2fc9e18c2b7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:26"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:51"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)318_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:59"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)318_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)318_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "1c2e879cdf983d6087cf7c8e6f45bf5aa384e4a8e5efea56128b929c43dba67f",
          "withoutMetadata": "c292b6c25f39bdae8661ffe709a6f7d69a716b4c36e313236f0fe2fc9e18c2b7",
          "linkedWithoutMetadata": "c292b6c25f39bdae8661ffe709a6f7d69a716b4c36e313236f0fe2fc9e18c2b7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:26"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:40"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:51"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)318_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:59"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)318_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)318_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "8a226c06581e57395a895a1a0941c7d7f0f1f7cda011ac62ca74cc69925f9dd5",
          "withoutMetadata": "5d4d4f4031d69cfc0fb2f909ea4dafed492f95b8e3ce7bad469d7cdc05e2273d",
          "linkedWithoutMetadata": "5d4d4f4031d69cfc0fb2f909ea4dafed492f95b8e3ce7bad469d7cdc05e2273d"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:37"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:48"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)318_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:56"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)318_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)318_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "9223c9eb743f983c587b106aa7048d39f98b93c7f60ead03b6ff1801bde59753",
          "withoutMetadata": "48aa292b5a3bc951656ea248ee7c2b0465d55ed9713e2d6200f9248ff09210ca",
          "linkedWithoutMetadata": "48aa292b5a3bc951656ea248ee7c2b0465d55ed9713e2d6200f9248ff09210ca"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:37"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:48"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)318_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:56"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)318_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)318_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "9223c9eb743f983c587b106aa7048d39f98b93c7f60ead03b6ff1801bde59753",
          "withoutMetadata": "48aa292b5a3bc951656ea248ee7c2b0465d55ed9713e2d6200f9248ff09210ca",
          "linkedWithoutMetadata": "48aa292b5a3bc951656ea248ee7c2b0465d55ed9713e2d6200f9248ff09210ca"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:37"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:48"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)318_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:56"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)318_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)318_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "9223c9eb743f983c587b106aa7048d39f98b93c7f60ead03b6ff1801bde59753",
          "withoutMetadata": "48aa292b5a3bc951656ea248ee7c2b0465d55ed9713e2d6200f9248ff09210ca",
          "linkedWithoutMetadata": "48aa292b5a3bc951656ea248ee7c2b0465d55ed9713e2d6200f9248ff09210ca"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:37"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:48"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)318_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:56"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)318_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)318_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "cec35d86f7d3f81179abb4fc4b226d5ca710000c28fbc5d572c06981e17b7270",
          "withoutMetadata": "7e2f928eb8bc49ff4a568d021a6c0859ed92440538acbaa78b280672acf407a3",
          "linkedWithoutMetadata": "7e2f928eb8bc49ff4a568d021a6c0859ed92440538acbaa78b280672acf407a3"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:37"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:48"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)318_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:56"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)318_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)318_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "d75c047b403eae03e8b1d80f3e1c9953479c6918012f4149d42123fd63b74bab",
          "withoutMetadata": "5301d63847658a47aadb17e12ad9ee9f643d7e6c1d7528b4b7a2123a1e298cc1",
          "linkedWithoutMetadata": "5301d63847658a47aadb17e12ad9ee9f643d7e6c1d7528b4b7a2123a1e298cc1"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:37"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:48"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)318_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:56"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)318_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)318_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "d75c047b403eae03e8b1d80f3e1c9953479c6918012f4149d42123fd63b74bab",
          "withoutMetadata": "5301d63847658a47aadb17e12ad9ee9f643d7e6c1d7528b4b7a2123a1e298cc1",
          "linkedWithoutMetadata": "5301d63847658a47aadb17e12ad9ee9f643d7e6c1d7528b4b7a2123a1e298cc1"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "updatePrice(uint256)",
          "updatePoints(string,uint256,uint256)",
          "withdraw(uint256)",
          "deposit()",
          "()",
          "spin()",
          "userBalance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:23"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:37"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:48"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)318_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:56"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)318_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)2_storage)": {
              "label": "mapping(string => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)318_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "scripts/contracts/SlotMachine.sol:SlotMachine": {
        "src": "scripts/contracts/SlotMachine.sol:6",
        "version": {
          "withMetadata": "ea1ce0a5a26113339a880d0230fc36443a56abc32de6b8dc438ce552b7547a08",
          "withoutMetadata": "c0e72e8df1eb5090233fffd74c6a7e4a30528895b10cab22650e3e4b0f556851",
          "linkedWithoutMetadata": "c0e72e8df1eb5090233fffd74c6a7e4a30528895b10cab22650e3e4b0f556851"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(uint256)",
          "withdraw(uint256)",
          "deposit()",
          "spin()",
          "user_balance()",
          "cashOut()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SlotMachine",
            "src": "scripts/contracts/SlotMachine.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbols",
            "src": "scripts/contracts/SlotMachine.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:8"
            },
            {
              "label": "symbols",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:28"
            },
            {
              "label": "payouts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)3_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:39"
            },
            {
              "label": "slots",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Slot)234_storage)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:47"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SlotMachine",
              "src": "scripts/contracts/SlotMachine.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)3_storage": {
              "label": "string[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)3_storage": {
              "label": "uint256[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Slot)234_storage)": {
              "label": "mapping(address => struct SlotMachine.Slot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_uint256)3_storage)": {
              "label": "mapping(string => uint256[3])",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Slot)234_storage": {
              "label": "struct SlotMachine.Slot",
              "members": [
                {
                  "label": "redeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "results",
                  "type": "t_array(t_string_storage)3_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    }
  ]
}